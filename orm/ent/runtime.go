// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/maxh/gqlgen-todos/orm/ent/organization"
	"github.com/maxh/gqlgen-todos/orm/ent/todo"
	"github.com/maxh/gqlgen-todos/orm/ent/user"
	"github.com/maxh/gqlgen-todos/orm/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescText is the schema descriptor for text field.
	organizationDescText := organizationFields[0].Descriptor()
	// organization.DefaultText holds the default value on creation for the text field.
	organization.DefaultText = organizationDescText.Default.(string)
	// organizationDescDone is the schema descriptor for done field.
	organizationDescDone := organizationFields[1].Descriptor()
	// organization.DefaultDone holds the default value on creation for the done field.
	organization.DefaultDone = organizationDescDone.Default.(bool)
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescText is the schema descriptor for text field.
	todoDescText := todoFields[0].Descriptor()
	// todo.DefaultText holds the default value on creation for the text field.
	todo.DefaultText = todoDescText.Default.(string)
	// todoDescDone is the schema descriptor for done field.
	todoDescDone := todoFields[1].Descriptor()
	// todo.DefaultDone holds the default value on creation for the done field.
	todo.DefaultDone = todoDescDone.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
}
